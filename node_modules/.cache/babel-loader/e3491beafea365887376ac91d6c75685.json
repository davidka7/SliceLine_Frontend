{"ast":null,"code":"var _jsxFileName = \"/Users/lieffriedrichs/Development/code/SliceLine_Frontend/src/containers/NewOrder.js\";\nimport React, { Component } from 'react';\nimport MainForm from '../components/MainForm';\nimport Cart from '../components/Cart';\nimport Button from 'react-bootstrap/Button';\nexport default class NewOrder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id_count: 0,\n      pizzas: []\n    };\n\n    this.addToOrder = (hash, id) => {\n      const array = this.state.pizzas;\n      const pizza = hash;\n      pizza.id = id;\n      array.push(pizza);\n      this.setState({\n        id_count: id + 1,\n        pizzas: array\n      });\n    };\n\n    this.removePizza = id => {\n      const pizzas = this.state.pizzas.filter(pizza => pizza.id !== id);\n      this.setState({\n        pizzas\n      });\n    };\n\n    this.placeOrder = () => {\n      fetch('http://localhost:3000/api/v1/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          order: {\n            pizzas: this.state.pizzas,\n            user_id: this.props.user_id\n          }\n        })\n      }).then(res => res.json()).then(result => {\n        this.props.confirmOrder(result);\n        this.setState({\n          id_count: 0,\n          pizzas: []\n        });\n      }, error => {\n        console.log(error.message);\n      });\n    };\n  }\n\n  render() {\n    document.getElementsByClassName('title-text').innerHTML = 'Place A New Order';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newOrder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MainForm, {\n      addToOrder: this.addToOrder,\n      id: this.state.id_count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Cart, {\n      pizzas: this.state.pizzas,\n      removePizza: this.removePizza,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.placeOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Place Order\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/lieffriedrichs/Development/code/SliceLine_Frontend/src/containers/NewOrder.js"],"names":["React","Component","MainForm","Cart","Button","NewOrder","state","id_count","pizzas","addToOrder","hash","id","array","pizza","push","setState","removePizza","filter","placeOrder","fetch","method","headers","Accept","body","JSON","stringify","order","user_id","props","then","res","json","result","confirmOrder","error","console","log","message","render","document","getElementsByClassName","innerHTML"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE9CK,KAF8C,GAEtC;AACNC,MAAAA,QAAQ,EAAE,CADJ;AAENC,MAAAA,MAAM,EAAE;AAFF,KAFsC;;AAAA,SAO9CC,UAP8C,GAOjC,CAACC,IAAD,EAAOC,EAAP,KAAc;AACzB,YAAMC,KAAK,GAAG,KAAKN,KAAL,CAAWE,MAAzB;AACA,YAAMK,KAAK,GAAGH,IAAd;AACAG,MAAAA,KAAK,CAACF,EAAN,GAAWA,EAAX;AACAC,MAAAA,KAAK,CAACE,IAAN,CAAWD,KAAX;AACA,WAAKE,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAEI,EAAE,GAAG,CADH;AAEZH,QAAAA,MAAM,EAAEI;AAFI,OAAd;AAID,KAhB6C;;AAAA,SAkB9CI,WAlB8C,GAkB/BL,EAAD,IAAQ;AACpB,YAAMH,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAAX,CAAkBS,MAAlB,CAAyBJ,KAAK,IAAIA,KAAK,CAACF,EAAN,KAAaA,EAA/C,CAAf;AACA,WAAKI,QAAL,CAAc;AACZP,QAAAA;AADY,OAAd;AAGD,KAvB6C;;AAAA,SAyB9CU,UAzB8C,GAyBjC,MAAM;AACjBC,MAAAA,KAAK,CAAC,qCAAD,EAAwC;AAC3CC,QAAAA,MAAM,EAAE,MADmC;AAE3CC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFkC;AAM3CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,KAAK,EAAE;AACLlB,YAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MADd;AAELmB,YAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD;AAFf;AADY,SAAf;AANqC,OAAxC,CAAL,CAaGE,IAbH,CAaQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAbf,EAcGF,IAdH,CAeKG,MAAD,IAAY;AACV,aAAKJ,KAAL,CAAWK,YAAX,CAAwBD,MAAxB;AACA,aAAKjB,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAE,CADE;AAEZC,UAAAA,MAAM,EAAE;AAFI,SAAd;AAID,OArBL,EAsBK0B,KAAD,IAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,OAxBL;AA0BD,KApD6C;AAAA;;AAsD9CC,EAAAA,MAAM,GAAG;AACPC,IAAAA,QAAQ,CAACC,sBAAT,CAAgC,YAAhC,EAA8CC,SAA9C,GAA2D,mBAA3D;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,KAAKhC,UAA3B;AAAuC,MAAA,EAAE,EAAE,KAAKH,KAAL,CAAWC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAAzB;AAAiC,MAAA,WAAW,EAAE,KAAKQ,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,KAAKE,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF;AAQD;;AAhE6C","sourcesContent":["import React, { Component } from 'react'\nimport MainForm from '../components/MainForm'\nimport Cart from '../components/Cart'\nimport Button from 'react-bootstrap/Button'\nexport default class NewOrder extends Component {\n\n  state = {\n    id_count: 0,\n    pizzas: []\n  }\n\n  addToOrder = (hash, id) => {\n    const array = this.state.pizzas\n    const pizza = hash\n    pizza.id = id\n    array.push(pizza)\n    this.setState({\n      id_count: id + 1,\n      pizzas: array\n    });\n  }\n\n  removePizza = (id) => {\n    const pizzas = this.state.pizzas.filter(pizza => pizza.id !== id)\n    this.setState({\n      pizzas\n    });\n  }\n\n  placeOrder = () => {\n    fetch('http://localhost:3000/api/v1/orders', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        order: {\n          pizzas: this.state.pizzas,\n          user_id: this.props.user_id\n        }\n      })\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.props.confirmOrder(result);\n          this.setState({\n            id_count: 0,\n            pizzas: []\n          })\n        },\n        (error) => {\n          console.log(error.message)\n        }\n      )\n  }\n\n  render() {\n    document.getElementsByClassName('title-text').innerHTML =  'Place A New Order';\n    return (\n      <div className='newOrder'>\n        <MainForm addToOrder={this.addToOrder} id={this.state.id_count} />\n        <Cart pizzas={this.state.pizzas} removePizza={this.removePizza} />\n        <Button variant=\"dark\" onClick={this.placeOrder}>Place Order</Button>\n\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}