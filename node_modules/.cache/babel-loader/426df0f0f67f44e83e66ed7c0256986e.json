{"ast":null,"code":"var _jsxFileName = \"/Users/lieffriedrichs/Development/code/SliceLine_Frontend/src/containers/EditOrder.js\";\nimport React, { Component } from 'react';\nimport MainForm from '../components/MainForm';\nimport Cart from '../components/Cart';\nimport Button from 'react-bootstrap/Button';\nexport default class NewOrder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id_count: this.props.order.pizzas.length - 1,\n      pizzas: this.props.order.pizzas\n    };\n\n    this.addToOrder = (hash, id) => {\n      const array = this.state.pizzas;\n      const pizza = hash;\n      pizza.id = id;\n      array.push(pizza);\n      this.setState({\n        id_count: id + 1,\n        pizzas: array\n      });\n    };\n\n    this.removePizza = id => {\n      const pizzas = this.state.pizzas.filter(pizza => pizza.id !== id);\n      this.setState({\n        pizzas\n      });\n    };\n\n    this.editpizza = pizza => {\n      this.setState({\n        main_form_state: pizza\n      });\n    };\n\n    this.updateOrder = () => {\n      fetch('http://localhost:3000/api/v1/orders', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          order: {\n            id: this.props.order.id,\n            pizzas: this.state.pizzas,\n            user_id: this.props.user_id\n          }\n        })\n      }).then(res => res.json()).then(result => {\n        this.props.confirmEdit(result);\n        this.setState({\n          id_count: 0,\n          pizzas: []\n        });\n      }, error => {\n        console.log(error.message);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MainForm, {\n      addToOrder: this.addToOrder,\n      id: this.state.id_count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Cart, {\n      pizzas: this.state.pizzas,\n      removePizza: this.removePizza,\n      onEditPizza: this.editpizza,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.placeOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Place Order\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/lieffriedrichs/Development/code/SliceLine_Frontend/src/containers/EditOrder.js"],"names":["React","Component","MainForm","Cart","Button","NewOrder","state","id_count","props","order","pizzas","length","addToOrder","hash","id","array","pizza","push","setState","removePizza","filter","editpizza","main_form_state","updateOrder","fetch","method","headers","Accept","body","JSON","stringify","user_id","then","res","json","result","confirmEdit","error","console","log","message","render","placeOrder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MainForm from '../components/MainForm'\nimport Cart from '../components/Cart'\nimport Button from 'react-bootstrap/Button'\nexport default class NewOrder extends Component {\n\n    state = {\n        id_count: this.props.order.pizzas.length - 1,\n        pizzas: this.props.order.pizzas\n    }\n\n    addToOrder = (hash, id) => {\n        const array = this.state.pizzas\n        const pizza = hash\n        pizza.id = id\n        array.push(pizza)\n        this.setState({\n            id_count: id + 1,\n            pizzas: array\n        });\n    }\n\n    removePizza = (id) => {\n        const pizzas = this.state.pizzas.filter(pizza => pizza.id !== id)\n        this.setState({\n            pizzas\n        });\n    }\n\n    editpizza = (pizza) => {\n        this.setState({\n          main_form_state: pizza\n        })\n      }\n\n    updateOrder = () => {\n        fetch('http://localhost:3000/api/v1/orders', {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify({\n                order: {\n                    id: this.props.order.id,\n                    pizzas: this.state.pizzas,\n                    user_id: this.props.user_id\n                }\n            })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.props.confirmEdit(result);\n                    this.setState({\n                        id_count: 0,\n                        pizzas: []\n                    })\n                },\n                (error) => {\n                    console.log(error.message)\n                }\n            )\n    }\n\n    render() {\n        return (\n            <div>\n                <MainForm addToOrder={this.addToOrder} id={this.state.id_count} />\n                <Cart pizzas={this.state.pizzas} removePizza={this.removePizza} onEditPizza={this.editpizza} />\n                <Button variant=\"dark\" onClick={this.placeOrder}>Place Order</Button>\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}