{"ast":null,"code":"var _jsxFileName = \"/Users/lieffriedrichs/Development/code/SliceLine_Frontend/src/containers/EditOrder.js\";\nimport React, { Component } from 'react';\nimport MainForm from '../components/MainForm';\nimport Cart from '../components/Cart';\nimport Button from 'react-bootstrap/Button';\nconst DEFAULT_STATE = {\n  sizes: '',\n  sauces: '',\n  cheeses: '',\n  toppings: [],\n  gourmet_toppings: []\n};\nexport default class NewOrder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id_count: this.props.order.pizzas.length - 1,\n      pizzas: this.props.order.pizzas,\n      main_form_state: DEFAULT_STATE\n    };\n\n    this.addToOrder = (hash, id) => {\n      const array = this.state.pizzas;\n      const pizza = hash;\n      pizza.id = id;\n      array.push(pizza);\n      this.setState({\n        id_count: id + 1,\n        pizzas: array\n      });\n    };\n\n    this.removePizza = id => {\n      const pizzas = this.state.pizzas.filter(pizza => pizza.id !== id);\n      this.setState({\n        pizzas\n      });\n    };\n\n    this.editpizza = pizza => {\n      this.setState({\n        main_form_state: pizza\n      });\n    };\n\n    this.updateOrder = () => {\n      fetch(`http://localhost:3000/api/v1/orders/${this.props.order.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          order: {\n            id: this.props.order.id,\n            pizzas: this.state.pizzas,\n            user_id: this.props.user_id\n          }\n        })\n      }).then(res => res.json()).then(result => {\n        this.props.confirmEdit(result);\n        this.setState({\n          id_count: 0,\n          pizzas: []\n        });\n      }, error => {\n        console.log(error.message);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MainForm, {\n      addToOrder: this.addToOrder,\n      id: this.state.id_count,\n      state: this.state.main_form_state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Cart, {\n      pizzas: this.state.pizzas,\n      removePizza: this.removePizza,\n      onEditPizza: this.editpizza,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.updateOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Place Order\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/lieffriedrichs/Development/code/SliceLine_Frontend/src/containers/EditOrder.js"],"names":["React","Component","MainForm","Cart","Button","DEFAULT_STATE","sizes","sauces","cheeses","toppings","gourmet_toppings","NewOrder","state","id_count","props","order","pizzas","length","main_form_state","addToOrder","hash","id","array","pizza","push","setState","removePizza","filter","editpizza","updateOrder","fetch","method","headers","Accept","body","JSON","stringify","user_id","then","res","json","result","confirmEdit","error","console","log","message","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MainForm from '../components/MainForm'\nimport Cart from '../components/Cart'\nimport Button from 'react-bootstrap/Button'\n\nconst DEFAULT_STATE = {\n    sizes: '',\n    sauces: '',\n    cheeses: '',\n    toppings: [],\n    gourmet_toppings: []\n}\n\nexport default class NewOrder extends Component {\n\n    state = {\n        id_count: this.props.order.pizzas.length - 1,\n        pizzas: this.props.order.pizzas,\n        main_form_state: DEFAULT_STATE\n    }\n\n    addToOrder = (hash, id) => {\n        const array = this.state.pizzas\n        const pizza = hash\n        pizza.id = id\n        array.push(pizza)\n        this.setState({\n            id_count: id + 1,\n            pizzas: array\n        });\n    }\n\n    removePizza = (id) => {\n        const pizzas = this.state.pizzas.filter(pizza => pizza.id !== id)\n        this.setState({\n            pizzas\n        });\n    }\n\n    editpizza = (pizza) => {\n        this.setState({\n          main_form_state: pizza\n        })\n      }\n\n    updateOrder = () => {\n        fetch(`http://localhost:3000/api/v1/orders/${this.props.order.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify({\n                order: {\n                    id: this.props.order.id,\n                    pizzas: this.state.pizzas,\n                    user_id: this.props.user_id\n                }\n            })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.props.confirmEdit(result);\n                    this.setState({\n                        id_count: 0,\n                        pizzas: []\n                    })\n                },\n                (error) => {\n                    console.log(error.message)\n                }\n            )\n    }\n\n    render() {\n        return (\n            <div>\n                <MainForm addToOrder={this.addToOrder} id={this.state.id_count} state={this.state.main_form_state} />\n                <Cart pizzas={this.state.pizzas} removePizza={this.removePizza} onEditPizza={this.editpizza} />\n                <Button variant=\"dark\" onClick={this.updateOrder}>Place Order</Button>\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}